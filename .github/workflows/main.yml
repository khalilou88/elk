name: ELK Stack CI

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *"
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-docker-action@v4

      - name: Install Docker Compose
        run: |
          # Remove existing Docker Compose if exists
          sudo apt-get remove docker-compose

          # Download latest Docker Compose
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

          # Apply executable permissions
          sudo chmod +x /usr/local/bin/docker-compose

          # Verify installation
          docker-compose --version

      - name: Create necessary directories
        run: |
          mkdir -p data/elasticsearch
          chmod 777 data/elasticsearch

      - name: Validate Docker Compose file
        run: docker-compose config

      - name: Pull Docker images
        run: docker-compose pull

      - name: Start ELK Stack
        run: docker-compose up -d

      - name: Wait for services to be ready
        run: |
          sleep 90  # Increased wait time for services to fully start
          docker-compose ps

      - name: Check Elasticsearch health
        run: |
          docker-compose exec -T elasticsearch curl -f http://localhost:9200/_cluster/health?wait_for_status=green&timeout=60s

      - name: Check Kibana is running
        run: |
          docker-compose exec -T kibana curl -f http://localhost:5601/api/status

      - name: Check Logstash logs
        run: docker-compose logs logstash

      - name: Show Docker logs on failure
        if: failure()
        run: |
          echo "Elasticsearch Logs:"
          docker-compose logs elasticsearch
          echo "\n\nKibana Logs:"
          docker-compose logs kibana
          echo "\n\nLogstash Logs:"
          docker-compose logs logstash
          echo "\n\nFilebeat Logs:"
          docker-compose logs filebeat

      - name: Stop ELK Stack
        run: docker-compose down
